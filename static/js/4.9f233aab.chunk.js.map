{"version":3,"sources":["components/People/People.js"],"names":["People","props","list","useFav","fav","useState","loaded","setLoaded","useEffect","timmy","length","setTimeout","clearTimeout","className","map","item","index","activeClassName","to","name","type","parseInt","id"],"mappings":"mOAMe,SAASA,EAAOC,GAAO,IAI5BC,EAASD,EAATC,KAJ4B,EAKtBC,cAAPC,EAL6B,sBAMRC,oBAAS,GAND,mBAM7BC,EAN6B,KAMrBC,EANqB,KAuBpC,OAfAC,qBAAU,WACR,IAAIC,EASJ,OAPEA,EADEP,EAAKQ,OAAS,EACRC,WAAWJ,EAAW,KAAK,GAK3BI,WAAWJ,EAAW,KAAM,GAE/B,WACLK,aAAaH,MAEd,CAACP,IAGF,sBAAKW,UAAU,UAAf,UACE,8CACEP,GAAU,cAAC,IAAD,6BACK,IAAhBJ,EAAKQ,QAAgB,6CACrBR,EAAKY,KAAI,SAACC,EAAMC,GAAP,OACR,4BACE,eAAC,IAAD,CAASC,gBAAgB,aAAaC,GAAE,kBAAaF,EAAQ,GAA7D,UACGD,EAAKI,KACQ,WAAbf,EAAIgB,MAAqBJ,EAAQ,IAAMK,SAASjB,EAAIkB,KACnD,qCACE,sBAAMT,UAAU,iBAAhB,sBADF,qBAJEE,EAAKI","file":"static/js/4.9f233aab.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport './people.css';\nimport { useFav } from '../../context/FavContext';\nimport Spinner from '../Spinner/Spinner';\nimport { useState, useEffect } from 'react';\n\nexport default function People(props) {\n  //state fetch done in Main.js and passed as props.list\n  //props.list also passed to Person\n  //destructure to get list\n  const { list } = props;\n  const [fav] = useFav();\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    let timmy;\n    if (list.length > 0) {\n      timmy = setTimeout(setLoaded, 300, true);\n    } else {\n      //on initial render\n      //get rid of spinner after a default time\n      //same as axios timeout\n      timmy = setTimeout(setLoaded, 4000, true);\n    }\n    return () => {\n      clearTimeout(timmy);\n    };\n  }, [list]);\n\n  return (\n    <div className=\"results\">\n      <h2>People List</h2>\n      {!loaded && <Spinner>LOADING PEOPLE</Spinner>}\n      {list.length === 0 && <p>No people...</p>}\n      {list.map((item, index) => (\n        <p key={item.name}>\n          <NavLink activeClassName=\"activeLink\" to={`/people/${index + 1}`}>\n            {item.name}\n            {fav.type === 'people' && index + 1 === parseInt(fav.id) && (\n              <>\n                <span className=\"material-icons\">favorite</span> FAVOURITE!\n              </>\n            )}\n          </NavLink>\n        </p>\n      ))}\n    </div>\n  );\n}\n"],"sourceRoot":""}