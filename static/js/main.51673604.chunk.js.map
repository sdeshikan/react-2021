{"version":3,"sources":["components/Spinner/Spinner.js","context/FavContext.js","hooks/useLocalStorage.js","components/Nav/Nav.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/Home/Home.js","components/Sub/Sub.js","hooks/useStarWars.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["Spinner","props","className","children","FavContext","createContext","FavProvider","key","initial","useState","storedValue","localStorage","getItem","JSON","parse","val","setVal","useEffect","setItem","stringify","useLocalStorage","type","id","data","fav","setFav","Provider","value","useFav","context","useContext","Error","Nav","activeClassName","to","Header","company","SearchBar","keyword","category","inputRef","createRef","push","useHistory","current","onSubmit","ev","preventDefault","ref","name","placeholder","term","Home","time","active","nms","Array","isArray","join","Date","toLocaleTimeString","Sub","defaultProps","now","useStarWars","list","setList","setKeyword","axios","defaults","baseURL","cancel","console","log","get","params","search","timeout","cancelToken","CancelToken","c","then","response","results","catch","err","isCancel","warn","error","message","Main","Films","lazy","Film","People","Person","Planets","Planet","people","setPeople","planets","setPlanets","films","setFilms","window","scrollTo","path","fallback","exact","render","App","useLocation","pathname","split","oldPage","setOldPage","replace","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.51673604.chunk.js","sourcesContent":["import './spinner.css';\n\nexport default function Spinner(props) {\n  return (\n    <div className=\"overlay\">\n      <div className=\"spinner\">{props.children}</div>\n    </div>\n  );\n}\n","import { createContext, useContext } from 'react';\n//use the useLocalStorage hook instead of useState\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst FavContext = createContext();\n//now we have a context object\n\nfunction FavProvider(props) {\n  //create the provider and its functionality\n  const shape = {\n    type: '', //films, planets, people\n    id: 0, //id of film, or planet, or person\n    data: {}, //the actual data object\n  };\n  const [fav, setFav] = useLocalStorage('MyFav', shape);\n\n  function updateFav(type, id, data) {\n    setFav({\n      type,\n      id,\n      data,\n    });\n  }\n  return <FavContext.Provider value={[fav, updateFav]} {...props} />;\n}\n\nfunction useFav() {\n  //for pages that want to access the context object's value\n  //custom hook use...\n  const context = useContext(FavContext);\n  if (!context) throw new Error('Not inside the Provider');\n  return context; // [fav, updateFav]\n}\nexport { useFav, FavProvider };\n","//custom hook for localStorage\nimport { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, initial) {\n  // to replace useState for favourites objects\n  const [val, setVal] = useState(() => {\n    const storedValue = localStorage.getItem(key);\n\n    return storedValue ? JSON.parse(storedValue) : initial;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(val));\n  }, [key, val]);\n\n  return [val, setVal];\n}\n","// import Link from '../Link/Link';\nimport { NavLink } from 'react-router-dom';\nimport './nav.css';\n\nexport default function Nav(props) {\n  return (\n    <nav className=\"mainnav\">\n      <NavLink activeClassName=\"activeLink\" to=\"/films\">\n        Films\n      </NavLink>\n      <NavLink activeClassName=\"activeLink\" to=\"/people\">\n        People\n      </NavLink>\n      <NavLink activeClassName=\"activeLink\" to=\"/planets\">\n        Planets\n      </NavLink>\n    </nav>\n  );\n}\n","import './header.css';\nimport Nav from '../Nav/Nav';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n  return (\n    <header className=\"masthead\">\n      <h1>\n        <Link to=\"/\">{props.company}</Link>\n      </h1>\n      <Nav />\n    </header>\n  );\n}\n","import './searchbar.css';\nimport { createRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function SearchBar(props) {\n  const { keyword, category } = props;\n  let inputRef = createRef(); //container for a DOM element\n  const { push } = useHistory();\n  // const history = useHistory();\n\n  function submitted(ev) {\n    ev.preventDefault();\n    push(`/${category}?search=${inputRef.current.value}`);\n    //AFTER the change in route we need to update keyword\n    // saveSearch(inputRef.current.value);\n  }\n\n  useEffect(() => {\n    //initial load plus if keyword in App changes\n    inputRef.current.value = keyword;\n  }, [keyword, inputRef]);\n\n  return (\n    <section className=\"searchBar\">\n      <form onSubmit={submitted}>\n        <input\n          type=\"text\"\n          ref={inputRef}\n          name=\"keyword\"\n          className=\"searchText\"\n          placeholder=\"keyword\"\n        />\n        <button type=\"submit\" className=\"searchBtn\" name=\"searchBtn\">\n          Search\n        </button>\n      </form>\n      {props.term && <p>You searched for {props.term}</p>}\n    </section>\n  );\n}\n\n//{props.term ? <p>You searched for {props.term}</p> : ''}\n","import { PropTypes } from 'prop-types';\n//Consume context object in this component\n//to display current value\n//or set value to empty\nexport default function Home(props) {\n  const { time, active, name } = props;\n  let nms = Array.isArray(name) ? name.join(' and ') : name;\n  return (\n    <div>\n      <h1>Welcome {nms}, to the Home page</h1>\n      <p>The time is {new Date(time).toLocaleTimeString()}</p>\n      <p>The component is {active ? 'active' : 'NOT active'}</p>\n      {props.children}\n    </div>\n  );\n}\nHome.defaultProps = {\n  time: Date.now(),\n};\nHome.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  time: PropTypes.number,\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","export default function Sub() {\n  return (\n    <section>\n      <p>Just a section to insert inside Home.</p>\n    </section>\n  );\n}\n","// eslint-disable-next-line no-unused-vars\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useStarWars(category) {\n  //to replace the fetch/axios calls in Main.js\n  const [list, setList] = useState([]);\n  const [keyword, setKeyword] = useState('');\n\n  axios.defaults.baseURL = 'https://swapi.dev/api/';\n\n  useEffect(() => {\n    console.log('star wars axios', category, keyword);\n    let cancel;\n    axios\n      .get(category, {\n        params: { search: keyword },\n        timeout: 4000,\n        cancelToken: new axios.CancelToken((c) => {\n          cancel = c;\n        }),\n      })\n      .then((response) => {\n        setList(response.data.results);\n      })\n      .catch((err) => {\n        if (axios.isCancel(err)) {\n          console.warn('Cancelled API call');\n        } else {\n          console.error(err.message);\n        }\n      });\n\n    return () => {\n      //cancel if another fetch is about to be called.\n      cancel();\n    };\n  }, [category, setList, keyword]);\n\n  return [list, setKeyword];\n}\n","import './main.css';\nimport Home from '../Home/Home';\nimport Sub from '../Sub/Sub';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { lazy, Suspense, useEffect } from 'react';\nimport Spinner from '../Spinner/Spinner';\nimport useStarWars from '../../hooks/useStarWars';\n\nexport default function Main(props) {\n  //we could put state here to hold the list to share with children\n  const Films = lazy(() => import('../Films/Films'));\n  const Film = lazy(() => import('../Film/Film'));\n  const People = lazy(() => import('../People/People'));\n  const Person = lazy(() => import('../Person/Person'));\n  const Planets = lazy(() => import('../Planets/Planets'));\n  const Planet = lazy(() => import('../Planet/Planet'));\n\n  // const { pathname } = useLocation();\n  const { keyword, category } = props;\n  const [people, setPeople] = useStarWars('people'); //list of people\n  const [planets, setPlanets] = useStarWars('planets'); //list of planets\n  const [films, setFilms] = useStarWars('films'); //list of films\n\n  useEffect(() => {\n    switch (category) {\n      case 'people':\n        setPeople(keyword);\n        break;\n      case 'films':\n        setFilms(keyword);\n        break;\n      case 'planets':\n        setPlanets(keyword);\n        break;\n      default:\n    }\n    window.scrollTo(0, 0);\n  }, [category, keyword, setPeople, setFilms, setPlanets]); //run this each time the route changes\n\n  return (\n    <div className=\"mainContent\">\n      <Switch>\n        <Route path=\"/films\">\n          <Suspense fallback={<Spinner>Loading Films</Spinner>}>\n            <Films list={films} />\n          </Suspense>\n          <Route path=\"/films/:id\">\n            <Suspense fallback={<Spinner>Loading Details</Spinner>}>\n              <Film list={films} />\n            </Suspense>\n          </Route>\n        </Route>\n        <Route path=\"/planets\">\n          <Suspense fallback={<Spinner>Loading Planets</Spinner>}>\n            <Planets list={planets} />\n          </Suspense>\n          <Route path=\"/planets/:id\">\n            <Suspense fallback={<Spinner>Loading Details</Spinner>}>\n              <Planet list={planets} />\n            </Suspense>\n          </Route>\n        </Route>\n\n        <Route path=\"/people\">\n          <Suspense fallback={<Spinner>Loading People</Spinner>}>\n            <People list={people} />\n          </Suspense>\n          {/* People is passed prop with fetch results */}\n          <Route path=\"/people/:id\">\n            <Suspense fallback={<Spinner>Loading Details</Spinner>}>\n              <Person list={people} />\n            </Suspense>\n            {/* Person is passed prop with fetch results */}\n          </Route>\n        </Route>\n\n        <Route\n          path=\"/\"\n          exact\n          render={() => {\n            let name = ['Kylo', 'Rey', 'Luke'];\n\n            return (\n              <Home name={name} active={false} time={new Date() - 50000000}>\n                <Sub />\n                <Sub />\n              </Home>\n            );\n          }}\n        />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n","import './App.css';\nimport Header from '../Header/Header';\nimport SearchBar from '../SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport Main from '../Main/Main';\nimport { useLocation } from 'react-router-dom';\n//create context object in App so it can be shared\n//add the Provider to the component tree to give access to children\nimport { FavProvider } from '../../context/FavContext';\n\nexport default function App(props) {\n  const name = 'Company Name';\n  const { pathname, search } = useLocation();\n  const [nada, category, id] = pathname.split('/');\n  const [oldPage, setOldPage] = useState(category);\n  const [keyword, setKeyword] = useState('');\n\n  // /   /planets   /planets/45\n\n  useEffect(() => {\n    //see if /planets => /films change keyword\n    //if /planets => /planets/5 do NOT change keyword\n    console.log(`going from ${oldPage} to ${category}`);\n    if (oldPage === category) {\n      if (search) {\n        const term = search.replace('?search=', '');\n        console.log(`running a search for ${term}`);\n        setKeyword(term);\n      } else {\n        if (!id) {\n          setKeyword('');\n        }\n      }\n    } else {\n      //changed category\n      setKeyword('');\n      setOldPage(category);\n    }\n  }, [category, search, id, oldPage]);\n\n  return (\n    <FavProvider>\n      <div className=\"App\">\n        <Header company={name} />\n        {category && <SearchBar keyword={keyword} category={category} />}\n\n        <main className=\"content\">\n          <Main keyword={keyword} category={category} />\n        </main>\n      </div>\n    </FavProvider>\n  );\n}\n\n// import React from 'react';\n// export default class App extends React.Component{\n//   constructor(props){\n//     super(props)\n//   }\n//   render(){\n//     return <div className=\"App\"> </div>;\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n//,\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}